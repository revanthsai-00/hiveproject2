Objective - The assignment is meant for you to apply learnings of the module on Hive on a real-life dataset. One of the major objectives of this assignment is gaining familiarity with how an analysis works in Hive and how you can gain insights from large datasets.
 
Problem Statement - New York City is a thriving metropolis and just like most other cities of similar size, one of the biggest problems its residents face is parking. The classic combination of a huge number of cars and a cramped geography is the exact recipe that leads to a large number of parking tickets.
 
In an attempt to scientifically analyse this phenomenon, the NYC Police Department regularly collects data related to parking tickets. This data is made available by NYC Open Data portal. We will try and perform some analysis on this data.

Download Dataset - https://data.cityofnewyork.us/browse?q=parking+tickets

Note: Consider only the year 2017 for analysis and not the Fiscal year.

The analysis can be divided into two parts:
 
Part-I: Examine the data

1.) Find the total number of tickets for the year.
2.) Find out how many unique states the cars which got parking tickets came from.

3.) Some parking tickets don’t have addresses on them, which is cause for concern. Find out how many such tickets there are(i.e. tickets where either "Street Code 1" or "Street Code 2" or "Street Code 3" is empty )
3667515
Part-II: Aggregation tasks

1.) How often does each violation code occur? (frequency of violation codes - find the top 5)
select violationcode,count(violationcode) from parkingviolation group by violationcode order by violationcode desc limit 6;

99      3316
98      51011
97      112
96      81
95      182
94      446

2.) How often does each vehicle body type get a parking ticket? How about the vehicle make? (find the top 5 for both)
select vechilebody,count(vechilebody) as cv  from parkingviolation group by vechilebody order by cv desc limit 5;

SUBN    3719796
4DSD    3082006
VAN     1411964
DELV    687324
SDN     438191

 select vechilemake,count(vechilemake) as cv  from parkingviolation group by vechilemake order by cv desc limit 5;
FORD    1280956
TOYOT   1211447
HONDA   1079237
NISSA   918590
CHEVR   714654

3.) A precinct is a police station that has a certain zone of the city under its command. Find the (5 highest) frequencies of:
      a.) Violating Precincts (this is the precinct of the zone where the violation occurred)
      select violationprecint,count(violationprecint) as cv  from parkingviolation group by violationprecint order by cv desc limit 6;

      
      0       2388475
19      521513
14      344977
1       321170
18      296554
114     289950

      b.) Issuer Precincts (this is the precinct that issued the ticket)
      select issuerprecint,count(issuerprecint) as cv  from parkingviolation group by issuerprecint order by cv desc limit 6;

      
0       2388475
19      521513
14      344977
1       321170
18      296554
114     289950

4.) Find the violation code frequency across 3 precincts which have issued the most number of tickets - do these precinct zones have an exceptionally high frequency of certain violation codes?
 with cte as (select violationcode,issuerprecint,count(issuerprecint) as cv from parkingviolation group by issuerprecint,violationcode order by cv desc limit 50),cte2 as (select violationcode,max(cv) as mv from cte group by violationcode) select cte2.violationcode,issuerprecint,cv from cte inner join cte2 on cte.cv=cte2.mv ;
36      0       1400614
7       0       516389
21      0       268587
5       0       145642
14      18      91486
46      19      86386
37      19      72437
38      19      72343
69      14      58025
31      14      39857
16      1       38937
47      14      30540
20      1       27841

5.) Find out the properties of parking violations across different times of the day: The Violation Time field is specified in a strange format. Find a way to make this into a time attribute that you can use to divide into groups.
6.) Divide 24 hours into 6 equal discrete bins of time. The intervals you choose are at your discretion. For each of these groups, find the 3 most commonly occurring violations
7.) Now, try another direction. For the 3 most commonly occurring violation codes, find the most common times of day (in terms of the bins from the previous part)
8.) Let’s try and find some seasonality in this data
      a.) First, divide the year into some number of seasons, and find frequencies of tickets for each season. (Hint: A quick Google search reveals the following seasons in NYC: Spring(March, April, March); Summer(June, July, August); Fall(September, October, November); Winter(December, January, February))
      b.)Then, find the 3 most common violations for each of these seasons.

Note: Please ensure you make necessary optimizations to your queries like selecting the appropriate table format, using partitioned/bucketed tables. Marks will be awarded for keeping the performance also in mind.
